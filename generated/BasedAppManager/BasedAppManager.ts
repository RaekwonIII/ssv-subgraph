// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class BAppMetadataURIUpdated extends ethereum.Event {
  get params(): BAppMetadataURIUpdated__Params {
    return new BAppMetadataURIUpdated__Params(this);
  }
}

export class BAppMetadataURIUpdated__Params {
  _event: BAppMetadataURIUpdated;

  constructor(event: BAppMetadataURIUpdated) {
    this._event = event;
  }

  get bAppAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get metadataURI(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class BAppOptedInByStrategy extends ethereum.Event {
  get params(): BAppOptedInByStrategy__Params {
    return new BAppOptedInByStrategy__Params(this);
  }
}

export class BAppOptedInByStrategy__Params {
  _event: BAppOptedInByStrategy;

  constructor(event: BAppOptedInByStrategy) {
    this._event = event;
  }

  get strategyId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get bApp(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get data(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get tokens(): Array<Address> {
    return this._event.parameters[3].value.toAddressArray();
  }

  get obligationPercentages(): Array<BigInt> {
    return this._event.parameters[4].value.toBigIntArray();
  }
}

export class BAppRegistered extends ethereum.Event {
  get params(): BAppRegistered__Params {
    return new BAppRegistered__Params(this);
  }
}

export class BAppRegistered__Params {
  _event: BAppRegistered;

  constructor(event: BAppRegistered) {
    this._event = event;
  }

  get bAppAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokens(): Array<Address> {
    return this._event.parameters[2].value.toAddressArray();
  }

  get sharedRiskLevel(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get metadataURI(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class BAppTokensCreated extends ethereum.Event {
  get params(): BAppTokensCreated__Params {
    return new BAppTokensCreated__Params(this);
  }
}

export class BAppTokensCreated__Params {
  _event: BAppTokensCreated;

  constructor(event: BAppTokensCreated) {
    this._event = event;
  }

  get bAppAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokens(): Array<Address> {
    return this._event.parameters[1].value.toAddressArray();
  }

  get sharedRiskLevels(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }
}

export class BAppTokensUpdated extends ethereum.Event {
  get params(): BAppTokensUpdated__Params {
    return new BAppTokensUpdated__Params(this);
  }
}

export class BAppTokensUpdated__Params {
  _event: BAppTokensUpdated;

  constructor(event: BAppTokensUpdated) {
    this._event = event;
  }

  get bAppAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokens(): Array<Address> {
    return this._event.parameters[1].value.toAddressArray();
  }

  get sharedRiskLevels(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }
}

export class DelegationCreated extends ethereum.Event {
  get params(): DelegationCreated__Params {
    return new DelegationCreated__Params(this);
  }
}

export class DelegationCreated__Params {
  _event: DelegationCreated;

  constructor(event: DelegationCreated) {
    this._event = event;
  }

  get delegator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get receiver(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get percentage(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class DelegationRemoved extends ethereum.Event {
  get params(): DelegationRemoved__Params {
    return new DelegationRemoved__Params(this);
  }
}

export class DelegationRemoved__Params {
  _event: DelegationRemoved;

  constructor(event: DelegationRemoved) {
    this._event = event;
  }

  get delegator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get receiver(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class DelegationUpdated extends ethereum.Event {
  get params(): DelegationUpdated__Params {
    return new DelegationUpdated__Params(this);
  }
}

export class DelegationUpdated__Params {
  _event: DelegationUpdated;

  constructor(event: DelegationUpdated) {
    this._event = event;
  }

  get delegator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get receiver(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get percentage(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class MaxFeeIncrementSet extends ethereum.Event {
  get params(): MaxFeeIncrementSet__Params {
    return new MaxFeeIncrementSet__Params(this);
  }
}

export class MaxFeeIncrementSet__Params {
  _event: MaxFeeIncrementSet;

  constructor(event: MaxFeeIncrementSet) {
    this._event = event;
  }

  get newMaxFeeIncrement(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ObligationCreated extends ethereum.Event {
  get params(): ObligationCreated__Params {
    return new ObligationCreated__Params(this);
  }
}

export class ObligationCreated__Params {
  _event: ObligationCreated;

  constructor(event: ObligationCreated) {
    this._event = event;
  }

  get strategyId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get bApp(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get percentage(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ObligationUpdateProposed extends ethereum.Event {
  get params(): ObligationUpdateProposed__Params {
    return new ObligationUpdateProposed__Params(this);
  }
}

export class ObligationUpdateProposed__Params {
  _event: ObligationUpdateProposed;

  constructor(event: ObligationUpdateProposed) {
    this._event = event;
  }

  get strategyId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get bApp(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get percentage(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ObligationUpdated extends ethereum.Event {
  get params(): ObligationUpdated__Params {
    return new ObligationUpdated__Params(this);
  }
}

export class ObligationUpdated__Params {
  _event: ObligationUpdated;

  constructor(event: ObligationUpdated) {
    this._event = event;
  }

  get strategyId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get bApp(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get percentage(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get isFast(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class StrategyCreated extends ethereum.Event {
  get params(): StrategyCreated__Params {
    return new StrategyCreated__Params(this);
  }
}

export class StrategyCreated__Params {
  _event: StrategyCreated;

  constructor(event: StrategyCreated) {
    this._event = event;
  }

  get strategyId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get fee(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class StrategyDeposit extends ethereum.Event {
  get params(): StrategyDeposit__Params {
    return new StrategyDeposit__Params(this);
  }
}

export class StrategyDeposit__Params {
  _event: StrategyDeposit;

  constructor(event: StrategyDeposit) {
    this._event = event;
  }

  get strategyId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class StrategyFeeUpdateProposed extends ethereum.Event {
  get params(): StrategyFeeUpdateProposed__Params {
    return new StrategyFeeUpdateProposed__Params(this);
  }
}

export class StrategyFeeUpdateProposed__Params {
  _event: StrategyFeeUpdateProposed;

  constructor(event: StrategyFeeUpdateProposed) {
    this._event = event;
  }

  get strategyId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get proposedFee(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get fee(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class StrategyFeeUpdated extends ethereum.Event {
  get params(): StrategyFeeUpdated__Params {
    return new StrategyFeeUpdated__Params(this);
  }
}

export class StrategyFeeUpdated__Params {
  _event: StrategyFeeUpdated;

  constructor(event: StrategyFeeUpdated) {
    this._event = event;
  }

  get strategyId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get fee(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get oldFee(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class StrategyWithdrawal extends ethereum.Event {
  get params(): StrategyWithdrawal__Params {
    return new StrategyWithdrawal__Params(this);
  }
}

export class StrategyWithdrawal__Params {
  _event: StrategyWithdrawal;

  constructor(event: StrategyWithdrawal) {
    this._event = event;
  }

  get strategyId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get isFast(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }
}

export class StrategyWithdrawalProposed extends ethereum.Event {
  get params(): StrategyWithdrawalProposed__Params {
    return new StrategyWithdrawalProposed__Params(this);
  }
}

export class StrategyWithdrawalProposed__Params {
  _event: StrategyWithdrawalProposed;

  constructor(event: StrategyWithdrawalProposed) {
    this._event = event;
  }

  get strategyId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class BasedAppManager__bAppTokensResult {
  value0: BigInt;
  value1: boolean;

  constructor(value0: BigInt, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }

  getValue(): BigInt {
    return this.value0;
  }

  getIsSet(): boolean {
    return this.value1;
  }
}

export class BasedAppManager__obligationRequestsResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getPercentage(): BigInt {
    return this.value0;
  }

  getRequestTime(): BigInt {
    return this.value1;
  }
}

export class BasedAppManager__obligationsResult {
  value0: BigInt;
  value1: boolean;

  constructor(value0: BigInt, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }

  getPercentage(): BigInt {
    return this.value0;
  }

  getIsSet(): boolean {
    return this.value1;
  }
}

export class BasedAppManager__strategiesResult {
  value0: Address;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: Address, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getOwner(): Address {
    return this.value0;
  }

  getFee(): BigInt {
    return this.value1;
  }

  getFeeProposed(): BigInt {
    return this.value2;
  }

  getFeeRequestTime(): BigInt {
    return this.value3;
  }
}

export class BasedAppManager__withdrawalRequestsResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getAmount(): BigInt {
    return this.value0;
  }

  getRequestTime(): BigInt {
    return this.value1;
  }
}

export class BasedAppManager extends ethereum.SmartContract {
  static bind(address: Address): BasedAppManager {
    return new BasedAppManager("BasedAppManager", address);
  }

  ETH_ADDRESS(): Address {
    let result = super.call("ETH_ADDRESS", "ETH_ADDRESS():(address)", []);

    return result[0].toAddress();
  }

  try_ETH_ADDRESS(): ethereum.CallResult<Address> {
    let result = super.tryCall("ETH_ADDRESS", "ETH_ADDRESS():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  FEE_EXPIRE_TIME(): BigInt {
    let result = super.call(
      "FEE_EXPIRE_TIME",
      "FEE_EXPIRE_TIME():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_FEE_EXPIRE_TIME(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "FEE_EXPIRE_TIME",
      "FEE_EXPIRE_TIME():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  FEE_TIMELOCK_PERIOD(): BigInt {
    let result = super.call(
      "FEE_TIMELOCK_PERIOD",
      "FEE_TIMELOCK_PERIOD():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_FEE_TIMELOCK_PERIOD(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "FEE_TIMELOCK_PERIOD",
      "FEE_TIMELOCK_PERIOD():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_PERCENTAGE(): BigInt {
    let result = super.call("MAX_PERCENTAGE", "MAX_PERCENTAGE():(uint32)", []);

    return result[0].toBigInt();
  }

  try_MAX_PERCENTAGE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_PERCENTAGE",
      "MAX_PERCENTAGE():(uint32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  OBLIGATION_EXPIRE_TIME(): BigInt {
    let result = super.call(
      "OBLIGATION_EXPIRE_TIME",
      "OBLIGATION_EXPIRE_TIME():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_OBLIGATION_EXPIRE_TIME(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "OBLIGATION_EXPIRE_TIME",
      "OBLIGATION_EXPIRE_TIME():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  OBLIGATION_TIMELOCK_PERIOD(): BigInt {
    let result = super.call(
      "OBLIGATION_TIMELOCK_PERIOD",
      "OBLIGATION_TIMELOCK_PERIOD():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_OBLIGATION_TIMELOCK_PERIOD(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "OBLIGATION_TIMELOCK_PERIOD",
      "OBLIGATION_TIMELOCK_PERIOD():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  UPGRADE_INTERFACE_VERSION(): string {
    let result = super.call(
      "UPGRADE_INTERFACE_VERSION",
      "UPGRADE_INTERFACE_VERSION():(string)",
      [],
    );

    return result[0].toString();
  }

  try_UPGRADE_INTERFACE_VERSION(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "UPGRADE_INTERFACE_VERSION",
      "UPGRADE_INTERFACE_VERSION():(string)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  WITHDRAWAL_EXPIRE_TIME(): BigInt {
    let result = super.call(
      "WITHDRAWAL_EXPIRE_TIME",
      "WITHDRAWAL_EXPIRE_TIME():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_WITHDRAWAL_EXPIRE_TIME(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "WITHDRAWAL_EXPIRE_TIME",
      "WITHDRAWAL_EXPIRE_TIME():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  WITHDRAWAL_TIMELOCK_PERIOD(): BigInt {
    let result = super.call(
      "WITHDRAWAL_TIMELOCK_PERIOD",
      "WITHDRAWAL_TIMELOCK_PERIOD():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_WITHDRAWAL_TIMELOCK_PERIOD(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "WITHDRAWAL_TIMELOCK_PERIOD",
      "WITHDRAWAL_TIMELOCK_PERIOD():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  accountBAppStrategy(account: Address, bApp: Address): BigInt {
    let result = super.call(
      "accountBAppStrategy",
      "accountBAppStrategy(address,address):(uint256)",
      [ethereum.Value.fromAddress(account), ethereum.Value.fromAddress(bApp)],
    );

    return result[0].toBigInt();
  }

  try_accountBAppStrategy(
    account: Address,
    bApp: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "accountBAppStrategy",
      "accountBAppStrategy(address,address):(uint256)",
      [ethereum.Value.fromAddress(account), ethereum.Value.fromAddress(bApp)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  bAppOwners(bApp: Address): Address {
    let result = super.call("bAppOwners", "bAppOwners(address):(address)", [
      ethereum.Value.fromAddress(bApp),
    ]);

    return result[0].toAddress();
  }

  try_bAppOwners(bApp: Address): ethereum.CallResult<Address> {
    let result = super.tryCall("bAppOwners", "bAppOwners(address):(address)", [
      ethereum.Value.fromAddress(bApp),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  bAppTokens(bApp: Address, token: Address): BasedAppManager__bAppTokensResult {
    let result = super.call(
      "bAppTokens",
      "bAppTokens(address,address):(uint32,bool)",
      [ethereum.Value.fromAddress(bApp), ethereum.Value.fromAddress(token)],
    );

    return new BasedAppManager__bAppTokensResult(
      result[0].toBigInt(),
      result[1].toBoolean(),
    );
  }

  try_bAppTokens(
    bApp: Address,
    token: Address,
  ): ethereum.CallResult<BasedAppManager__bAppTokensResult> {
    let result = super.tryCall(
      "bAppTokens",
      "bAppTokens(address,address):(uint32,bool)",
      [ethereum.Value.fromAddress(bApp), ethereum.Value.fromAddress(token)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BasedAppManager__bAppTokensResult(
        value[0].toBigInt(),
        value[1].toBoolean(),
      ),
    );
  }

  createStrategy(fee: BigInt): BigInt {
    let result = super.call(
      "createStrategy",
      "createStrategy(uint32):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(fee)],
    );

    return result[0].toBigInt();
  }

  try_createStrategy(fee: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createStrategy",
      "createStrategy(uint32):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(fee)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  delegations(delegator: Address, account: Address): BigInt {
    let result = super.call(
      "delegations",
      "delegations(address,address):(uint32)",
      [
        ethereum.Value.fromAddress(delegator),
        ethereum.Value.fromAddress(account),
      ],
    );

    return result[0].toBigInt();
  }

  try_delegations(
    delegator: Address,
    account: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "delegations",
      "delegations(address,address):(uint32)",
      [
        ethereum.Value.fromAddress(delegator),
        ethereum.Value.fromAddress(account),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxFeeIncrement(): BigInt {
    let result = super.call(
      "maxFeeIncrement",
      "maxFeeIncrement():(uint32)",
      [],
    );

    return result[0].toBigInt();
  }

  try_maxFeeIncrement(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxFeeIncrement",
      "maxFeeIncrement():(uint32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  obligationRequests(
    strategyId: BigInt,
    token: Address,
    bApp: Address,
  ): BasedAppManager__obligationRequestsResult {
    let result = super.call(
      "obligationRequests",
      "obligationRequests(uint256,address,address):(uint32,uint64)",
      [
        ethereum.Value.fromUnsignedBigInt(strategyId),
        ethereum.Value.fromAddress(token),
        ethereum.Value.fromAddress(bApp),
      ],
    );

    return new BasedAppManager__obligationRequestsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
    );
  }

  try_obligationRequests(
    strategyId: BigInt,
    token: Address,
    bApp: Address,
  ): ethereum.CallResult<BasedAppManager__obligationRequestsResult> {
    let result = super.tryCall(
      "obligationRequests",
      "obligationRequests(uint256,address,address):(uint32,uint64)",
      [
        ethereum.Value.fromUnsignedBigInt(strategyId),
        ethereum.Value.fromAddress(token),
        ethereum.Value.fromAddress(bApp),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BasedAppManager__obligationRequestsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
      ),
    );
  }

  obligations(
    strategyId: BigInt,
    bApp: Address,
    token: Address,
  ): BasedAppManager__obligationsResult {
    let result = super.call(
      "obligations",
      "obligations(uint256,address,address):(uint32,bool)",
      [
        ethereum.Value.fromUnsignedBigInt(strategyId),
        ethereum.Value.fromAddress(bApp),
        ethereum.Value.fromAddress(token),
      ],
    );

    return new BasedAppManager__obligationsResult(
      result[0].toBigInt(),
      result[1].toBoolean(),
    );
  }

  try_obligations(
    strategyId: BigInt,
    bApp: Address,
    token: Address,
  ): ethereum.CallResult<BasedAppManager__obligationsResult> {
    let result = super.tryCall(
      "obligations",
      "obligations(uint256,address,address):(uint32,bool)",
      [
        ethereum.Value.fromUnsignedBigInt(strategyId),
        ethereum.Value.fromAddress(bApp),
        ethereum.Value.fromAddress(token),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BasedAppManager__obligationsResult(
        value[0].toBigInt(),
        value[1].toBoolean(),
      ),
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proxiableUUID(): Bytes {
    let result = super.call("proxiableUUID", "proxiableUUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_proxiableUUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "proxiableUUID",
      "proxiableUUID():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  strategies(strategyId: BigInt): BasedAppManager__strategiesResult {
    let result = super.call(
      "strategies",
      "strategies(uint256):(address,uint32,uint32,uint64)",
      [ethereum.Value.fromUnsignedBigInt(strategyId)],
    );

    return new BasedAppManager__strategiesResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
    );
  }

  try_strategies(
    strategyId: BigInt,
  ): ethereum.CallResult<BasedAppManager__strategiesResult> {
    let result = super.tryCall(
      "strategies",
      "strategies(uint256):(address,uint32,uint32,uint64)",
      [ethereum.Value.fromUnsignedBigInt(strategyId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BasedAppManager__strategiesResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
      ),
    );
  }

  strategyTokenBalances(
    strategyId: BigInt,
    account: Address,
    token: Address,
  ): BigInt {
    let result = super.call(
      "strategyTokenBalances",
      "strategyTokenBalances(uint256,address,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(strategyId),
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromAddress(token),
      ],
    );

    return result[0].toBigInt();
  }

  try_strategyTokenBalances(
    strategyId: BigInt,
    account: Address,
    token: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "strategyTokenBalances",
      "strategyTokenBalances(uint256,address,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(strategyId),
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromAddress(token),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalDelegatedPercentage(delegator: Address): BigInt {
    let result = super.call(
      "totalDelegatedPercentage",
      "totalDelegatedPercentage(address):(uint32)",
      [ethereum.Value.fromAddress(delegator)],
    );

    return result[0].toBigInt();
  }

  try_totalDelegatedPercentage(
    delegator: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalDelegatedPercentage",
      "totalDelegatedPercentage(address):(uint32)",
      [ethereum.Value.fromAddress(delegator)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  usedTokens(strategyId: BigInt, token: Address): BigInt {
    let result = super.call(
      "usedTokens",
      "usedTokens(uint256,address):(uint32)",
      [
        ethereum.Value.fromUnsignedBigInt(strategyId),
        ethereum.Value.fromAddress(token),
      ],
    );

    return result[0].toBigInt();
  }

  try_usedTokens(
    strategyId: BigInt,
    token: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "usedTokens",
      "usedTokens(uint256,address):(uint32)",
      [
        ethereum.Value.fromUnsignedBigInt(strategyId),
        ethereum.Value.fromAddress(token),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  withdrawalRequests(
    strategyId: BigInt,
    account: Address,
    token: Address,
  ): BasedAppManager__withdrawalRequestsResult {
    let result = super.call(
      "withdrawalRequests",
      "withdrawalRequests(uint256,address,address):(uint256,uint64)",
      [
        ethereum.Value.fromUnsignedBigInt(strategyId),
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromAddress(token),
      ],
    );

    return new BasedAppManager__withdrawalRequestsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
    );
  }

  try_withdrawalRequests(
    strategyId: BigInt,
    account: Address,
    token: Address,
  ): ethereum.CallResult<BasedAppManager__withdrawalRequestsResult> {
    let result = super.tryCall(
      "withdrawalRequests",
      "withdrawalRequests(uint256,address,address):(uint256,uint64)",
      [
        ethereum.Value.fromUnsignedBigInt(strategyId),
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromAddress(token),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BasedAppManager__withdrawalRequestsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
      ),
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddTokensToBAppCall extends ethereum.Call {
  get inputs(): AddTokensToBAppCall__Inputs {
    return new AddTokensToBAppCall__Inputs(this);
  }

  get outputs(): AddTokensToBAppCall__Outputs {
    return new AddTokensToBAppCall__Outputs(this);
  }
}

export class AddTokensToBAppCall__Inputs {
  _call: AddTokensToBAppCall;

  constructor(call: AddTokensToBAppCall) {
    this._call = call;
  }

  get bApp(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokens(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get sharedRiskLevels(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class AddTokensToBAppCall__Outputs {
  _call: AddTokensToBAppCall;

  constructor(call: AddTokensToBAppCall) {
    this._call = call;
  }
}

export class CreateObligationCall extends ethereum.Call {
  get inputs(): CreateObligationCall__Inputs {
    return new CreateObligationCall__Inputs(this);
  }

  get outputs(): CreateObligationCall__Outputs {
    return new CreateObligationCall__Outputs(this);
  }
}

export class CreateObligationCall__Inputs {
  _call: CreateObligationCall;

  constructor(call: CreateObligationCall) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get bApp(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get obligationPercentage(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class CreateObligationCall__Outputs {
  _call: CreateObligationCall;

  constructor(call: CreateObligationCall) {
    this._call = call;
  }
}

export class CreateStrategyCall extends ethereum.Call {
  get inputs(): CreateStrategyCall__Inputs {
    return new CreateStrategyCall__Inputs(this);
  }

  get outputs(): CreateStrategyCall__Outputs {
    return new CreateStrategyCall__Outputs(this);
  }
}

export class CreateStrategyCall__Inputs {
  _call: CreateStrategyCall;

  constructor(call: CreateStrategyCall) {
    this._call = call;
  }

  get fee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CreateStrategyCall__Outputs {
  _call: CreateStrategyCall;

  constructor(call: CreateStrategyCall) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class DelegateBalanceCall extends ethereum.Call {
  get inputs(): DelegateBalanceCall__Inputs {
    return new DelegateBalanceCall__Inputs(this);
  }

  get outputs(): DelegateBalanceCall__Outputs {
    return new DelegateBalanceCall__Outputs(this);
  }
}

export class DelegateBalanceCall__Inputs {
  _call: DelegateBalanceCall;

  constructor(call: DelegateBalanceCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get percentage(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DelegateBalanceCall__Outputs {
  _call: DelegateBalanceCall;

  constructor(call: DelegateBalanceCall) {
    this._call = call;
  }
}

export class DepositERC20Call extends ethereum.Call {
  get inputs(): DepositERC20Call__Inputs {
    return new DepositERC20Call__Inputs(this);
  }

  get outputs(): DepositERC20Call__Outputs {
    return new DepositERC20Call__Outputs(this);
  }
}

export class DepositERC20Call__Inputs {
  _call: DepositERC20Call;

  constructor(call: DepositERC20Call) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class DepositERC20Call__Outputs {
  _call: DepositERC20Call;

  constructor(call: DepositERC20Call) {
    this._call = call;
  }
}

export class DepositETHCall extends ethereum.Call {
  get inputs(): DepositETHCall__Inputs {
    return new DepositETHCall__Inputs(this);
  }

  get outputs(): DepositETHCall__Outputs {
    return new DepositETHCall__Outputs(this);
  }
}

export class DepositETHCall__Inputs {
  _call: DepositETHCall;

  constructor(call: DepositETHCall) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DepositETHCall__Outputs {
  _call: DepositETHCall;

  constructor(call: DepositETHCall) {
    this._call = call;
  }
}

export class FastUpdateObligationCall extends ethereum.Call {
  get inputs(): FastUpdateObligationCall__Inputs {
    return new FastUpdateObligationCall__Inputs(this);
  }

  get outputs(): FastUpdateObligationCall__Outputs {
    return new FastUpdateObligationCall__Outputs(this);
  }
}

export class FastUpdateObligationCall__Inputs {
  _call: FastUpdateObligationCall;

  constructor(call: FastUpdateObligationCall) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get bApp(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get obligationPercentage(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class FastUpdateObligationCall__Outputs {
  _call: FastUpdateObligationCall;

  constructor(call: FastUpdateObligationCall) {
    this._call = call;
  }
}

export class FastWithdrawERC20Call extends ethereum.Call {
  get inputs(): FastWithdrawERC20Call__Inputs {
    return new FastWithdrawERC20Call__Inputs(this);
  }

  get outputs(): FastWithdrawERC20Call__Outputs {
    return new FastWithdrawERC20Call__Outputs(this);
  }
}

export class FastWithdrawERC20Call__Inputs {
  _call: FastWithdrawERC20Call;

  constructor(call: FastWithdrawERC20Call) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class FastWithdrawERC20Call__Outputs {
  _call: FastWithdrawERC20Call;

  constructor(call: FastWithdrawERC20Call) {
    this._call = call;
  }
}

export class FastWithdrawETHCall extends ethereum.Call {
  get inputs(): FastWithdrawETHCall__Inputs {
    return new FastWithdrawETHCall__Inputs(this);
  }

  get outputs(): FastWithdrawETHCall__Outputs {
    return new FastWithdrawETHCall__Outputs(this);
  }
}

export class FastWithdrawETHCall__Inputs {
  _call: FastWithdrawETHCall;

  constructor(call: FastWithdrawETHCall) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class FastWithdrawETHCall__Outputs {
  _call: FastWithdrawETHCall;

  constructor(call: FastWithdrawETHCall) {
    this._call = call;
  }
}

export class FinalizeFeeUpdateCall extends ethereum.Call {
  get inputs(): FinalizeFeeUpdateCall__Inputs {
    return new FinalizeFeeUpdateCall__Inputs(this);
  }

  get outputs(): FinalizeFeeUpdateCall__Outputs {
    return new FinalizeFeeUpdateCall__Outputs(this);
  }
}

export class FinalizeFeeUpdateCall__Inputs {
  _call: FinalizeFeeUpdateCall;

  constructor(call: FinalizeFeeUpdateCall) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class FinalizeFeeUpdateCall__Outputs {
  _call: FinalizeFeeUpdateCall;

  constructor(call: FinalizeFeeUpdateCall) {
    this._call = call;
  }
}

export class FinalizeUpdateObligationCall extends ethereum.Call {
  get inputs(): FinalizeUpdateObligationCall__Inputs {
    return new FinalizeUpdateObligationCall__Inputs(this);
  }

  get outputs(): FinalizeUpdateObligationCall__Outputs {
    return new FinalizeUpdateObligationCall__Outputs(this);
  }
}

export class FinalizeUpdateObligationCall__Inputs {
  _call: FinalizeUpdateObligationCall;

  constructor(call: FinalizeUpdateObligationCall) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get bApp(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class FinalizeUpdateObligationCall__Outputs {
  _call: FinalizeUpdateObligationCall;

  constructor(call: FinalizeUpdateObligationCall) {
    this._call = call;
  }
}

export class FinalizeWithdrawalCall extends ethereum.Call {
  get inputs(): FinalizeWithdrawalCall__Inputs {
    return new FinalizeWithdrawalCall__Inputs(this);
  }

  get outputs(): FinalizeWithdrawalCall__Outputs {
    return new FinalizeWithdrawalCall__Outputs(this);
  }
}

export class FinalizeWithdrawalCall__Inputs {
  _call: FinalizeWithdrawalCall;

  constructor(call: FinalizeWithdrawalCall) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class FinalizeWithdrawalCall__Outputs {
  _call: FinalizeWithdrawalCall;

  constructor(call: FinalizeWithdrawalCall) {
    this._call = call;
  }
}

export class FinalizeWithdrawalETHCall extends ethereum.Call {
  get inputs(): FinalizeWithdrawalETHCall__Inputs {
    return new FinalizeWithdrawalETHCall__Inputs(this);
  }

  get outputs(): FinalizeWithdrawalETHCall__Outputs {
    return new FinalizeWithdrawalETHCall__Outputs(this);
  }
}

export class FinalizeWithdrawalETHCall__Inputs {
  _call: FinalizeWithdrawalETHCall;

  constructor(call: FinalizeWithdrawalETHCall) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class FinalizeWithdrawalETHCall__Outputs {
  _call: FinalizeWithdrawalETHCall;

  constructor(call: FinalizeWithdrawalETHCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _maxFeeIncrement(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class OptInToBAppCall extends ethereum.Call {
  get inputs(): OptInToBAppCall__Inputs {
    return new OptInToBAppCall__Inputs(this);
  }

  get outputs(): OptInToBAppCall__Outputs {
    return new OptInToBAppCall__Outputs(this);
  }
}

export class OptInToBAppCall__Inputs {
  _call: OptInToBAppCall;

  constructor(call: OptInToBAppCall) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get bApp(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokens(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }

  get obligationPercentages(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class OptInToBAppCall__Outputs {
  _call: OptInToBAppCall;

  constructor(call: OptInToBAppCall) {
    this._call = call;
  }
}

export class ProposeFeeUpdateCall extends ethereum.Call {
  get inputs(): ProposeFeeUpdateCall__Inputs {
    return new ProposeFeeUpdateCall__Inputs(this);
  }

  get outputs(): ProposeFeeUpdateCall__Outputs {
    return new ProposeFeeUpdateCall__Outputs(this);
  }
}

export class ProposeFeeUpdateCall__Inputs {
  _call: ProposeFeeUpdateCall;

  constructor(call: ProposeFeeUpdateCall) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get proposedFee(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ProposeFeeUpdateCall__Outputs {
  _call: ProposeFeeUpdateCall;

  constructor(call: ProposeFeeUpdateCall) {
    this._call = call;
  }
}

export class ProposeUpdateObligationCall extends ethereum.Call {
  get inputs(): ProposeUpdateObligationCall__Inputs {
    return new ProposeUpdateObligationCall__Inputs(this);
  }

  get outputs(): ProposeUpdateObligationCall__Outputs {
    return new ProposeUpdateObligationCall__Outputs(this);
  }
}

export class ProposeUpdateObligationCall__Inputs {
  _call: ProposeUpdateObligationCall;

  constructor(call: ProposeUpdateObligationCall) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get bApp(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get obligationPercentage(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class ProposeUpdateObligationCall__Outputs {
  _call: ProposeUpdateObligationCall;

  constructor(call: ProposeUpdateObligationCall) {
    this._call = call;
  }
}

export class ProposeWithdrawalCall extends ethereum.Call {
  get inputs(): ProposeWithdrawalCall__Inputs {
    return new ProposeWithdrawalCall__Inputs(this);
  }

  get outputs(): ProposeWithdrawalCall__Outputs {
    return new ProposeWithdrawalCall__Outputs(this);
  }
}

export class ProposeWithdrawalCall__Inputs {
  _call: ProposeWithdrawalCall;

  constructor(call: ProposeWithdrawalCall) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ProposeWithdrawalCall__Outputs {
  _call: ProposeWithdrawalCall;

  constructor(call: ProposeWithdrawalCall) {
    this._call = call;
  }
}

export class ProposeWithdrawalETHCall extends ethereum.Call {
  get inputs(): ProposeWithdrawalETHCall__Inputs {
    return new ProposeWithdrawalETHCall__Inputs(this);
  }

  get outputs(): ProposeWithdrawalETHCall__Outputs {
    return new ProposeWithdrawalETHCall__Outputs(this);
  }
}

export class ProposeWithdrawalETHCall__Inputs {
  _call: ProposeWithdrawalETHCall;

  constructor(call: ProposeWithdrawalETHCall) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ProposeWithdrawalETHCall__Outputs {
  _call: ProposeWithdrawalETHCall;

  constructor(call: ProposeWithdrawalETHCall) {
    this._call = call;
  }
}

export class RegisterBAppCall extends ethereum.Call {
  get inputs(): RegisterBAppCall__Inputs {
    return new RegisterBAppCall__Inputs(this);
  }

  get outputs(): RegisterBAppCall__Outputs {
    return new RegisterBAppCall__Outputs(this);
  }
}

export class RegisterBAppCall__Inputs {
  _call: RegisterBAppCall;

  constructor(call: RegisterBAppCall) {
    this._call = call;
  }

  get bApp(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokens(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get sharedRiskLevels(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get metadataURI(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class RegisterBAppCall__Outputs {
  _call: RegisterBAppCall;

  constructor(call: RegisterBAppCall) {
    this._call = call;
  }
}

export class RemoveDelegatedBalanceCall extends ethereum.Call {
  get inputs(): RemoveDelegatedBalanceCall__Inputs {
    return new RemoveDelegatedBalanceCall__Inputs(this);
  }

  get outputs(): RemoveDelegatedBalanceCall__Outputs {
    return new RemoveDelegatedBalanceCall__Outputs(this);
  }
}

export class RemoveDelegatedBalanceCall__Inputs {
  _call: RemoveDelegatedBalanceCall;

  constructor(call: RemoveDelegatedBalanceCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveDelegatedBalanceCall__Outputs {
  _call: RemoveDelegatedBalanceCall;

  constructor(call: RemoveDelegatedBalanceCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateBAppTokensCall extends ethereum.Call {
  get inputs(): UpdateBAppTokensCall__Inputs {
    return new UpdateBAppTokensCall__Inputs(this);
  }

  get outputs(): UpdateBAppTokensCall__Outputs {
    return new UpdateBAppTokensCall__Outputs(this);
  }
}

export class UpdateBAppTokensCall__Inputs {
  _call: UpdateBAppTokensCall;

  constructor(call: UpdateBAppTokensCall) {
    this._call = call;
  }

  get bApp(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokens(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get sharedRiskLevels(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class UpdateBAppTokensCall__Outputs {
  _call: UpdateBAppTokensCall;

  constructor(call: UpdateBAppTokensCall) {
    this._call = call;
  }
}

export class UpdateDelegatedBalanceCall extends ethereum.Call {
  get inputs(): UpdateDelegatedBalanceCall__Inputs {
    return new UpdateDelegatedBalanceCall__Inputs(this);
  }

  get outputs(): UpdateDelegatedBalanceCall__Outputs {
    return new UpdateDelegatedBalanceCall__Outputs(this);
  }
}

export class UpdateDelegatedBalanceCall__Inputs {
  _call: UpdateDelegatedBalanceCall;

  constructor(call: UpdateDelegatedBalanceCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get percentage(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateDelegatedBalanceCall__Outputs {
  _call: UpdateDelegatedBalanceCall;

  constructor(call: UpdateDelegatedBalanceCall) {
    this._call = call;
  }
}

export class UpdateMetadataURICall extends ethereum.Call {
  get inputs(): UpdateMetadataURICall__Inputs {
    return new UpdateMetadataURICall__Inputs(this);
  }

  get outputs(): UpdateMetadataURICall__Outputs {
    return new UpdateMetadataURICall__Outputs(this);
  }
}

export class UpdateMetadataURICall__Inputs {
  _call: UpdateMetadataURICall;

  constructor(call: UpdateMetadataURICall) {
    this._call = call;
  }

  get bApp(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get metadataURI(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateMetadataURICall__Outputs {
  _call: UpdateMetadataURICall;

  constructor(call: UpdateMetadataURICall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}
