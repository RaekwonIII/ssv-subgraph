// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AccountMetadataURIUpdated extends ethereum.Event {
  get params(): AccountMetadataURIUpdated__Params {
    return new AccountMetadataURIUpdated__Params(this);
  }
}

export class AccountMetadataURIUpdated__Params {
  _event: AccountMetadataURIUpdated;

  constructor(event: AccountMetadataURIUpdated) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get metadataURI(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class BAppMetadataURIUpdated extends ethereum.Event {
  get params(): BAppMetadataURIUpdated__Params {
    return new BAppMetadataURIUpdated__Params(this);
  }
}

export class BAppMetadataURIUpdated__Params {
  _event: BAppMetadataURIUpdated;

  constructor(event: BAppMetadataURIUpdated) {
    this._event = event;
  }

  get bApp(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get metadataURI(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class BAppOptedInByStrategy extends ethereum.Event {
  get params(): BAppOptedInByStrategy__Params {
    return new BAppOptedInByStrategy__Params(this);
  }
}

export class BAppOptedInByStrategy__Params {
  _event: BAppOptedInByStrategy;

  constructor(event: BAppOptedInByStrategy) {
    this._event = event;
  }

  get strategyId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get bApp(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get data(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get tokens(): Array<Address> {
    return this._event.parameters[3].value.toAddressArray();
  }

  get obligationPercentages(): Array<BigInt> {
    return this._event.parameters[4].value.toBigIntArray();
  }
}

export class BAppRegistered extends ethereum.Event {
  get params(): BAppRegistered__Params {
    return new BAppRegistered__Params(this);
  }
}

export class BAppRegistered__Params {
  _event: BAppRegistered;

  constructor(event: BAppRegistered) {
    this._event = event;
  }

  get bApp(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokens(): Array<Address> {
    return this._event.parameters[1].value.toAddressArray();
  }

  get sharedRiskLevel(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }

  get metadataURI(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class BAppTokensUpdated extends ethereum.Event {
  get params(): BAppTokensUpdated__Params {
    return new BAppTokensUpdated__Params(this);
  }
}

export class BAppTokensUpdated__Params {
  _event: BAppTokensUpdated;

  constructor(event: BAppTokensUpdated) {
    this._event = event;
  }

  get bApp(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenConfigs(): Array<BAppTokensUpdatedTokenConfigsStruct> {
    return this._event.parameters[1].value.toTupleArray<BAppTokensUpdatedTokenConfigsStruct>();
  }
}

export class BAppTokensUpdatedTokenConfigsStruct extends ethereum.Tuple {
  get token(): Address {
    return this[0].toAddress();
  }

  get sharedRiskLevel(): BigInt {
    return this[1].toBigInt();
  }
}

export class DelegationCreated extends ethereum.Event {
  get params(): DelegationCreated__Params {
    return new DelegationCreated__Params(this);
  }
}

export class DelegationCreated__Params {
  _event: DelegationCreated;

  constructor(event: DelegationCreated) {
    this._event = event;
  }

  get delegator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get receiver(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get percentage(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class DelegationRemoved extends ethereum.Event {
  get params(): DelegationRemoved__Params {
    return new DelegationRemoved__Params(this);
  }
}

export class DelegationRemoved__Params {
  _event: DelegationRemoved;

  constructor(event: DelegationRemoved) {
    this._event = event;
  }

  get delegator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get receiver(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class DelegationUpdated extends ethereum.Event {
  get params(): DelegationUpdated__Params {
    return new DelegationUpdated__Params(this);
  }
}

export class DelegationUpdated__Params {
  _event: DelegationUpdated;

  constructor(event: DelegationUpdated) {
    this._event = event;
  }

  get delegator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get receiver(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get percentage(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class DisabledFeaturesUpdated extends ethereum.Event {
  get params(): DisabledFeaturesUpdated__Params {
    return new DisabledFeaturesUpdated__Params(this);
  }
}

export class DisabledFeaturesUpdated__Params {
  _event: DisabledFeaturesUpdated;

  constructor(event: DisabledFeaturesUpdated) {
    this._event = event;
  }

  get disabledFeatures(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class FeeExpireTimeUpdated extends ethereum.Event {
  get params(): FeeExpireTimeUpdated__Params {
    return new FeeExpireTimeUpdated__Params(this);
  }
}

export class FeeExpireTimeUpdated__Params {
  _event: FeeExpireTimeUpdated;

  constructor(event: FeeExpireTimeUpdated) {
    this._event = event;
  }

  get feeExpireTime(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class FeeTimelockPeriodUpdated extends ethereum.Event {
  get params(): FeeTimelockPeriodUpdated__Params {
    return new FeeTimelockPeriodUpdated__Params(this);
  }
}

export class FeeTimelockPeriodUpdated__Params {
  _event: FeeTimelockPeriodUpdated;

  constructor(event: FeeTimelockPeriodUpdated) {
    this._event = event;
  }

  get feeTimelockPeriod(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class MaxFeeIncrementSet extends ethereum.Event {
  get params(): MaxFeeIncrementSet__Params {
    return new MaxFeeIncrementSet__Params(this);
  }
}

export class MaxFeeIncrementSet__Params {
  _event: MaxFeeIncrementSet;

  constructor(event: MaxFeeIncrementSet) {
    this._event = event;
  }

  get newMaxFeeIncrement(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ModuleUpdated extends ethereum.Event {
  get params(): ModuleUpdated__Params {
    return new ModuleUpdated__Params(this);
  }
}

export class ModuleUpdated__Params {
  _event: ModuleUpdated;

  constructor(event: ModuleUpdated) {
    this._event = event;
  }

  get moduleId(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get moduleAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ObligationCreated extends ethereum.Event {
  get params(): ObligationCreated__Params {
    return new ObligationCreated__Params(this);
  }
}

export class ObligationCreated__Params {
  _event: ObligationCreated;

  constructor(event: ObligationCreated) {
    this._event = event;
  }

  get strategyId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get bApp(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get percentage(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ObligationExpireTimeUpdated extends ethereum.Event {
  get params(): ObligationExpireTimeUpdated__Params {
    return new ObligationExpireTimeUpdated__Params(this);
  }
}

export class ObligationExpireTimeUpdated__Params {
  _event: ObligationExpireTimeUpdated;

  constructor(event: ObligationExpireTimeUpdated) {
    this._event = event;
  }

  get obligationExpireTime(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ObligationTimelockPeriodUpdated extends ethereum.Event {
  get params(): ObligationTimelockPeriodUpdated__Params {
    return new ObligationTimelockPeriodUpdated__Params(this);
  }
}

export class ObligationTimelockPeriodUpdated__Params {
  _event: ObligationTimelockPeriodUpdated;

  constructor(event: ObligationTimelockPeriodUpdated) {
    this._event = event;
  }

  get obligationTimelockPeriod(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ObligationUpdateProposed extends ethereum.Event {
  get params(): ObligationUpdateProposed__Params {
    return new ObligationUpdateProposed__Params(this);
  }
}

export class ObligationUpdateProposed__Params {
  _event: ObligationUpdateProposed;

  constructor(event: ObligationUpdateProposed) {
    this._event = event;
  }

  get strategyId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get bApp(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get percentage(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ObligationUpdated extends ethereum.Event {
  get params(): ObligationUpdated__Params {
    return new ObligationUpdated__Params(this);
  }
}

export class ObligationUpdated__Params {
  _event: ObligationUpdated;

  constructor(event: ObligationUpdated) {
    this._event = event;
  }

  get strategyId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get bApp(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get percentage(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class OwnershipTransferStarted extends ethereum.Event {
  get params(): OwnershipTransferStarted__Params {
    return new OwnershipTransferStarted__Params(this);
  }
}

export class OwnershipTransferStarted__Params {
  _event: OwnershipTransferStarted;

  constructor(event: OwnershipTransferStarted) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SlashingFundWithdrawn extends ethereum.Event {
  get params(): SlashingFundWithdrawn__Params {
    return new SlashingFundWithdrawn__Params(this);
  }
}

export class SlashingFundWithdrawn__Params {
  _event: SlashingFundWithdrawn;

  constructor(event: SlashingFundWithdrawn) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class StrategyCreated extends ethereum.Event {
  get params(): StrategyCreated__Params {
    return new StrategyCreated__Params(this);
  }
}

export class StrategyCreated__Params {
  _event: StrategyCreated;

  constructor(event: StrategyCreated) {
    this._event = event;
  }

  get strategyId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get fee(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get metadataURI(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class StrategyDeposit extends ethereum.Event {
  get params(): StrategyDeposit__Params {
    return new StrategyDeposit__Params(this);
  }
}

export class StrategyDeposit__Params {
  _event: StrategyDeposit;

  constructor(event: StrategyDeposit) {
    this._event = event;
  }

  get strategyId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class StrategyFeeUpdateProposed extends ethereum.Event {
  get params(): StrategyFeeUpdateProposed__Params {
    return new StrategyFeeUpdateProposed__Params(this);
  }
}

export class StrategyFeeUpdateProposed__Params {
  _event: StrategyFeeUpdateProposed;

  constructor(event: StrategyFeeUpdateProposed) {
    this._event = event;
  }

  get strategyId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get proposedFee(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class StrategyFeeUpdated extends ethereum.Event {
  get params(): StrategyFeeUpdated__Params {
    return new StrategyFeeUpdated__Params(this);
  }
}

export class StrategyFeeUpdated__Params {
  _event: StrategyFeeUpdated;

  constructor(event: StrategyFeeUpdated) {
    this._event = event;
  }

  get strategyId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get newFee(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get isFast(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }
}

export class StrategyMaxFeeIncrementUpdated extends ethereum.Event {
  get params(): StrategyMaxFeeIncrementUpdated__Params {
    return new StrategyMaxFeeIncrementUpdated__Params(this);
  }
}

export class StrategyMaxFeeIncrementUpdated__Params {
  _event: StrategyMaxFeeIncrementUpdated;

  constructor(event: StrategyMaxFeeIncrementUpdated) {
    this._event = event;
  }

  get maxFeeIncrement(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class StrategyMaxSharesUpdated extends ethereum.Event {
  get params(): StrategyMaxSharesUpdated__Params {
    return new StrategyMaxSharesUpdated__Params(this);
  }
}

export class StrategyMaxSharesUpdated__Params {
  _event: StrategyMaxSharesUpdated;

  constructor(event: StrategyMaxSharesUpdated) {
    this._event = event;
  }

  get maxShares(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class StrategyMetadataURIUpdated extends ethereum.Event {
  get params(): StrategyMetadataURIUpdated__Params {
    return new StrategyMetadataURIUpdated__Params(this);
  }
}

export class StrategyMetadataURIUpdated__Params {
  _event: StrategyMetadataURIUpdated;

  constructor(event: StrategyMetadataURIUpdated) {
    this._event = event;
  }

  get strategyId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get metadataURI(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class StrategySlashed extends ethereum.Event {
  get params(): StrategySlashed__Params {
    return new StrategySlashed__Params(this);
  }
}

export class StrategySlashed__Params {
  _event: StrategySlashed;

  constructor(event: StrategySlashed) {
    this._event = event;
  }

  get strategyId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get bApp(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get percentage(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get receiver(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class StrategyWithdrawal extends ethereum.Event {
  get params(): StrategyWithdrawal__Params {
    return new StrategyWithdrawal__Params(this);
  }
}

export class StrategyWithdrawal__Params {
  _event: StrategyWithdrawal;

  constructor(event: StrategyWithdrawal) {
    this._event = event;
  }

  get strategyId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get isFast(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }
}

export class StrategyWithdrawalProposed extends ethereum.Event {
  get params(): StrategyWithdrawalProposed__Params {
    return new StrategyWithdrawalProposed__Params(this);
  }
}

export class StrategyWithdrawalProposed__Params {
  _event: StrategyWithdrawalProposed;

  constructor(event: StrategyWithdrawalProposed) {
    this._event = event;
  }

  get strategyId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class TokenUpdateTimelockPeriodUpdated extends ethereum.Event {
  get params(): TokenUpdateTimelockPeriodUpdated__Params {
    return new TokenUpdateTimelockPeriodUpdated__Params(this);
  }
}

export class TokenUpdateTimelockPeriodUpdated__Params {
  _event: TokenUpdateTimelockPeriodUpdated;

  constructor(event: TokenUpdateTimelockPeriodUpdated) {
    this._event = event;
  }

  get tokenUpdateTimelockPeriod(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class WithdrawalExpireTimeUpdated extends ethereum.Event {
  get params(): WithdrawalExpireTimeUpdated__Params {
    return new WithdrawalExpireTimeUpdated__Params(this);
  }
}

export class WithdrawalExpireTimeUpdated__Params {
  _event: WithdrawalExpireTimeUpdated;

  constructor(event: WithdrawalExpireTimeUpdated) {
    this._event = event;
  }

  get withdrawalExpireTime(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class WithdrawalTimelockPeriodUpdated extends ethereum.Event {
  get params(): WithdrawalTimelockPeriodUpdated__Params {
    return new WithdrawalTimelockPeriodUpdated__Params(this);
  }
}

export class WithdrawalTimelockPeriodUpdated__Params {
  _event: WithdrawalTimelockPeriodUpdated;

  constructor(event: WithdrawalTimelockPeriodUpdated) {
    this._event = event;
  }

  get withdrawalTimelockPeriod(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class BasedAppManager__bAppTokensResult {
  value0: BigInt;
  value1: boolean;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: BigInt, value1: boolean, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getCurrentValue(): BigInt {
    return this.value0;
  }

  getIsSet(): boolean {
    return this.value1;
  }

  getPendingValue(): BigInt {
    return this.value2;
  }

  getEffectTime(): BigInt {
    return this.value3;
  }
}

export class BasedAppManager__feeUpdateRequestsResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getPercentage(): BigInt {
    return this.value0;
  }

  getRequestTime(): BigInt {
    return this.value1;
  }
}

export class BasedAppManager__obligationRequestsResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getPercentage(): BigInt {
    return this.value0;
  }

  getRequestTime(): BigInt {
    return this.value1;
  }
}

export class BasedAppManager__obligationsResult {
  value0: BigInt;
  value1: boolean;

  constructor(value0: BigInt, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }

  getPercentage(): BigInt {
    return this.value0;
  }

  getIsSet(): boolean {
    return this.value1;
  }
}

export class BasedAppManager__strategiesResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getStrategyOwner(): Address {
    return this.value0;
  }

  getFee(): BigInt {
    return this.value1;
  }
}

export class BasedAppManager__withdrawalRequestsResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getShares(): BigInt {
    return this.value0;
  }

  getRequestTime(): BigInt {
    return this.value1;
  }
}

export class BasedAppManager extends ethereum.SmartContract {
  static bind(address: Address): BasedAppManager {
    return new BasedAppManager("BasedAppManager", address);
  }

  UPGRADE_INTERFACE_VERSION(): string {
    let result = super.call(
      "UPGRADE_INTERFACE_VERSION",
      "UPGRADE_INTERFACE_VERSION():(string)",
      [],
    );

    return result[0].toString();
  }

  try_UPGRADE_INTERFACE_VERSION(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "UPGRADE_INTERFACE_VERSION",
      "UPGRADE_INTERFACE_VERSION():(string)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  accountBAppStrategy(account: Address, bApp: Address): BigInt {
    let result = super.call(
      "accountBAppStrategy",
      "accountBAppStrategy(address,address):(uint32)",
      [ethereum.Value.fromAddress(account), ethereum.Value.fromAddress(bApp)],
    );

    return result[0].toBigInt();
  }

  try_accountBAppStrategy(
    account: Address,
    bApp: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "accountBAppStrategy",
      "accountBAppStrategy(address,address):(uint32)",
      [ethereum.Value.fromAddress(account), ethereum.Value.fromAddress(bApp)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  bAppTokens(bApp: Address, token: Address): BasedAppManager__bAppTokensResult {
    let result = super.call(
      "bAppTokens",
      "bAppTokens(address,address):(uint32,bool,uint32,uint32)",
      [ethereum.Value.fromAddress(bApp), ethereum.Value.fromAddress(token)],
    );

    return new BasedAppManager__bAppTokensResult(
      result[0].toBigInt(),
      result[1].toBoolean(),
      result[2].toBigInt(),
      result[3].toBigInt(),
    );
  }

  try_bAppTokens(
    bApp: Address,
    token: Address,
  ): ethereum.CallResult<BasedAppManager__bAppTokensResult> {
    let result = super.tryCall(
      "bAppTokens",
      "bAppTokens(address,address):(uint32,bool,uint32,uint32)",
      [ethereum.Value.fromAddress(bApp), ethereum.Value.fromAddress(token)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BasedAppManager__bAppTokensResult(
        value[0].toBigInt(),
        value[1].toBoolean(),
        value[2].toBigInt(),
        value[3].toBigInt(),
      ),
    );
  }

  createStrategy(fee: BigInt, metadataURI: string): BigInt {
    let result = super.call(
      "createStrategy",
      "createStrategy(uint32,string):(uint32)",
      [
        ethereum.Value.fromUnsignedBigInt(fee),
        ethereum.Value.fromString(metadataURI),
      ],
    );

    return result[0].toBigInt();
  }

  try_createStrategy(
    fee: BigInt,
    metadataURI: string,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createStrategy",
      "createStrategy(uint32,string):(uint32)",
      [
        ethereum.Value.fromUnsignedBigInt(fee),
        ethereum.Value.fromString(metadataURI),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  delegations(account: Address, receiver: Address): BigInt {
    let result = super.call(
      "delegations",
      "delegations(address,address):(uint32)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromAddress(receiver),
      ],
    );

    return result[0].toBigInt();
  }

  try_delegations(
    account: Address,
    receiver: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "delegations",
      "delegations(address,address):(uint32)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromAddress(receiver),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  disabledFeatures(): BigInt {
    let result = super.call(
      "disabledFeatures",
      "disabledFeatures():(uint32)",
      [],
    );

    return result[0].toBigInt();
  }

  try_disabledFeatures(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "disabledFeatures",
      "disabledFeatures():(uint32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ethAddress(): Address {
    let result = super.call("ethAddress", "ethAddress():(address)", []);

    return result[0].toAddress();
  }

  try_ethAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall("ethAddress", "ethAddress():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  feeExpireTime(): BigInt {
    let result = super.call("feeExpireTime", "feeExpireTime():(uint32)", []);

    return result[0].toBigInt();
  }

  try_feeExpireTime(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("feeExpireTime", "feeExpireTime():(uint32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  feeTimelockPeriod(): BigInt {
    let result = super.call(
      "feeTimelockPeriod",
      "feeTimelockPeriod():(uint32)",
      [],
    );

    return result[0].toBigInt();
  }

  try_feeTimelockPeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "feeTimelockPeriod",
      "feeTimelockPeriod():(uint32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  feeUpdateRequests(
    strategyId: BigInt,
  ): BasedAppManager__feeUpdateRequestsResult {
    let result = super.call(
      "feeUpdateRequests",
      "feeUpdateRequests(uint32):(uint32,uint32)",
      [ethereum.Value.fromUnsignedBigInt(strategyId)],
    );

    return new BasedAppManager__feeUpdateRequestsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
    );
  }

  try_feeUpdateRequests(
    strategyId: BigInt,
  ): ethereum.CallResult<BasedAppManager__feeUpdateRequestsResult> {
    let result = super.tryCall(
      "feeUpdateRequests",
      "feeUpdateRequests(uint32):(uint32,uint32)",
      [ethereum.Value.fromUnsignedBigInt(strategyId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BasedAppManager__feeUpdateRequestsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
      ),
    );
  }

  getModuleAddress(moduleId: i32): Address {
    let result = super.call(
      "getModuleAddress",
      "getModuleAddress(uint8):(address)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(moduleId))],
    );

    return result[0].toAddress();
  }

  try_getModuleAddress(moduleId: i32): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getModuleAddress",
      "getModuleAddress(uint8):(address)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(moduleId))],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getSlashableBalance(
    strategyId: BigInt,
    bApp: Address,
    token: Address,
  ): BigInt {
    let result = super.call(
      "getSlashableBalance",
      "getSlashableBalance(uint32,address,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(strategyId),
        ethereum.Value.fromAddress(bApp),
        ethereum.Value.fromAddress(token),
      ],
    );

    return result[0].toBigInt();
  }

  try_getSlashableBalance(
    strategyId: BigInt,
    bApp: Address,
    token: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getSlashableBalance",
      "getSlashableBalance(uint32,address,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(strategyId),
        ethereum.Value.fromAddress(bApp),
        ethereum.Value.fromAddress(token),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getVersion(): string {
    let result = super.call("getVersion", "getVersion():(string)", []);

    return result[0].toString();
  }

  try_getVersion(): ethereum.CallResult<string> {
    let result = super.tryCall("getVersion", "getVersion():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  maxFeeIncrement(): BigInt {
    let result = super.call(
      "maxFeeIncrement",
      "maxFeeIncrement():(uint32)",
      [],
    );

    return result[0].toBigInt();
  }

  try_maxFeeIncrement(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxFeeIncrement",
      "maxFeeIncrement():(uint32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxPercentage(): BigInt {
    let result = super.call("maxPercentage", "maxPercentage():(uint32)", []);

    return result[0].toBigInt();
  }

  try_maxPercentage(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxPercentage", "maxPercentage():(uint32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxShares(): BigInt {
    let result = super.call("maxShares", "maxShares():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxShares(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxShares", "maxShares():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  obligationExpireTime(): BigInt {
    let result = super.call(
      "obligationExpireTime",
      "obligationExpireTime():(uint32)",
      [],
    );

    return result[0].toBigInt();
  }

  try_obligationExpireTime(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "obligationExpireTime",
      "obligationExpireTime():(uint32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  obligationRequests(
    strategyId: BigInt,
    token: Address,
    bApp: Address,
  ): BasedAppManager__obligationRequestsResult {
    let result = super.call(
      "obligationRequests",
      "obligationRequests(uint32,address,address):(uint32,uint32)",
      [
        ethereum.Value.fromUnsignedBigInt(strategyId),
        ethereum.Value.fromAddress(token),
        ethereum.Value.fromAddress(bApp),
      ],
    );

    return new BasedAppManager__obligationRequestsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
    );
  }

  try_obligationRequests(
    strategyId: BigInt,
    token: Address,
    bApp: Address,
  ): ethereum.CallResult<BasedAppManager__obligationRequestsResult> {
    let result = super.tryCall(
      "obligationRequests",
      "obligationRequests(uint32,address,address):(uint32,uint32)",
      [
        ethereum.Value.fromUnsignedBigInt(strategyId),
        ethereum.Value.fromAddress(token),
        ethereum.Value.fromAddress(bApp),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BasedAppManager__obligationRequestsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
      ),
    );
  }

  obligationTimelockPeriod(): BigInt {
    let result = super.call(
      "obligationTimelockPeriod",
      "obligationTimelockPeriod():(uint32)",
      [],
    );

    return result[0].toBigInt();
  }

  try_obligationTimelockPeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "obligationTimelockPeriod",
      "obligationTimelockPeriod():(uint32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  obligations(
    strategyId: BigInt,
    bApp: Address,
    token: Address,
  ): BasedAppManager__obligationsResult {
    let result = super.call(
      "obligations",
      "obligations(uint32,address,address):(uint32,bool)",
      [
        ethereum.Value.fromUnsignedBigInt(strategyId),
        ethereum.Value.fromAddress(bApp),
        ethereum.Value.fromAddress(token),
      ],
    );

    return new BasedAppManager__obligationsResult(
      result[0].toBigInt(),
      result[1].toBoolean(),
    );
  }

  try_obligations(
    strategyId: BigInt,
    bApp: Address,
    token: Address,
  ): ethereum.CallResult<BasedAppManager__obligationsResult> {
    let result = super.tryCall(
      "obligations",
      "obligations(uint32,address,address):(uint32,bool)",
      [
        ethereum.Value.fromUnsignedBigInt(strategyId),
        ethereum.Value.fromAddress(bApp),
        ethereum.Value.fromAddress(token),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BasedAppManager__obligationsResult(
        value[0].toBigInt(),
        value[1].toBoolean(),
      ),
    );
  }

  ownedStrategies(owner: Address): Array<BigInt> {
    let result = super.call(
      "ownedStrategies",
      "ownedStrategies(address):(uint32[])",
      [ethereum.Value.fromAddress(owner)],
    );

    return result[0].toBigIntArray();
  }

  try_ownedStrategies(owner: Address): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "ownedStrategies",
      "ownedStrategies(address):(uint32[])",
      [ethereum.Value.fromAddress(owner)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pendingOwner(): Address {
    let result = super.call("pendingOwner", "pendingOwner():(address)", []);

    return result[0].toAddress();
  }

  try_pendingOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall("pendingOwner", "pendingOwner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proxiableUUID(): Bytes {
    let result = super.call("proxiableUUID", "proxiableUUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_proxiableUUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "proxiableUUID",
      "proxiableUUID():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  registeredBApps(bApp: Address): boolean {
    let result = super.call(
      "registeredBApps",
      "registeredBApps(address):(bool)",
      [ethereum.Value.fromAddress(bApp)],
    );

    return result[0].toBoolean();
  }

  try_registeredBApps(bApp: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "registeredBApps",
      "registeredBApps(address):(bool)",
      [ethereum.Value.fromAddress(bApp)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  slashingFund(account: Address, token: Address): BigInt {
    let result = super.call(
      "slashingFund",
      "slashingFund(address,address):(uint256)",
      [ethereum.Value.fromAddress(account), ethereum.Value.fromAddress(token)],
    );

    return result[0].toBigInt();
  }

  try_slashingFund(
    account: Address,
    token: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "slashingFund",
      "slashingFund(address,address):(uint256)",
      [ethereum.Value.fromAddress(account), ethereum.Value.fromAddress(token)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  strategies(strategyId: BigInt): BasedAppManager__strategiesResult {
    let result = super.call(
      "strategies",
      "strategies(uint32):(address,uint32)",
      [ethereum.Value.fromUnsignedBigInt(strategyId)],
    );

    return new BasedAppManager__strategiesResult(
      result[0].toAddress(),
      result[1].toBigInt(),
    );
  }

  try_strategies(
    strategyId: BigInt,
  ): ethereum.CallResult<BasedAppManager__strategiesResult> {
    let result = super.tryCall(
      "strategies",
      "strategies(uint32):(address,uint32)",
      [ethereum.Value.fromUnsignedBigInt(strategyId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BasedAppManager__strategiesResult(
        value[0].toAddress(),
        value[1].toBigInt(),
      ),
    );
  }

  strategyAccountShares(
    strategyId: BigInt,
    account: Address,
    token: Address,
  ): BigInt {
    let result = super.call(
      "strategyAccountShares",
      "strategyAccountShares(uint32,address,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(strategyId),
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromAddress(token),
      ],
    );

    return result[0].toBigInt();
  }

  try_strategyAccountShares(
    strategyId: BigInt,
    account: Address,
    token: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "strategyAccountShares",
      "strategyAccountShares(uint32,address,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(strategyId),
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromAddress(token),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  strategyGeneration(strategyId: BigInt, token: Address): BigInt {
    let result = super.call(
      "strategyGeneration",
      "strategyGeneration(uint32,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(strategyId),
        ethereum.Value.fromAddress(token),
      ],
    );

    return result[0].toBigInt();
  }

  try_strategyGeneration(
    strategyId: BigInt,
    token: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "strategyGeneration",
      "strategyGeneration(uint32,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(strategyId),
        ethereum.Value.fromAddress(token),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  strategyTotalBalance(strategyId: BigInt, token: Address): BigInt {
    let result = super.call(
      "strategyTotalBalance",
      "strategyTotalBalance(uint32,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(strategyId),
        ethereum.Value.fromAddress(token),
      ],
    );

    return result[0].toBigInt();
  }

  try_strategyTotalBalance(
    strategyId: BigInt,
    token: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "strategyTotalBalance",
      "strategyTotalBalance(uint32,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(strategyId),
        ethereum.Value.fromAddress(token),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  strategyTotalShares(strategyId: BigInt, token: Address): BigInt {
    let result = super.call(
      "strategyTotalShares",
      "strategyTotalShares(uint32,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(strategyId),
        ethereum.Value.fromAddress(token),
      ],
    );

    return result[0].toBigInt();
  }

  try_strategyTotalShares(
    strategyId: BigInt,
    token: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "strategyTotalShares",
      "strategyTotalShares(uint32,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(strategyId),
        ethereum.Value.fromAddress(token),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenUpdateTimelockPeriod(): BigInt {
    let result = super.call(
      "tokenUpdateTimelockPeriod",
      "tokenUpdateTimelockPeriod():(uint32)",
      [],
    );

    return result[0].toBigInt();
  }

  try_tokenUpdateTimelockPeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenUpdateTimelockPeriod",
      "tokenUpdateTimelockPeriod():(uint32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalDelegatedPercentage(delegator: Address): BigInt {
    let result = super.call(
      "totalDelegatedPercentage",
      "totalDelegatedPercentage(address):(uint32)",
      [ethereum.Value.fromAddress(delegator)],
    );

    return result[0].toBigInt();
  }

  try_totalDelegatedPercentage(
    delegator: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalDelegatedPercentage",
      "totalDelegatedPercentage(address):(uint32)",
      [ethereum.Value.fromAddress(delegator)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  withdrawalExpireTime(): BigInt {
    let result = super.call(
      "withdrawalExpireTime",
      "withdrawalExpireTime():(uint32)",
      [],
    );

    return result[0].toBigInt();
  }

  try_withdrawalExpireTime(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "withdrawalExpireTime",
      "withdrawalExpireTime():(uint32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  withdrawalRequests(
    strategyId: BigInt,
    account: Address,
    token: Address,
  ): BasedAppManager__withdrawalRequestsResult {
    let result = super.call(
      "withdrawalRequests",
      "withdrawalRequests(uint32,address,address):(uint256,uint32)",
      [
        ethereum.Value.fromUnsignedBigInt(strategyId),
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromAddress(token),
      ],
    );

    return new BasedAppManager__withdrawalRequestsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
    );
  }

  try_withdrawalRequests(
    strategyId: BigInt,
    account: Address,
    token: Address,
  ): ethereum.CallResult<BasedAppManager__withdrawalRequestsResult> {
    let result = super.tryCall(
      "withdrawalRequests",
      "withdrawalRequests(uint32,address,address):(uint256,uint32)",
      [
        ethereum.Value.fromUnsignedBigInt(strategyId),
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromAddress(token),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BasedAppManager__withdrawalRequestsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
      ),
    );
  }

  withdrawalTimelockPeriod(): BigInt {
    let result = super.call(
      "withdrawalTimelockPeriod",
      "withdrawalTimelockPeriod():(uint32)",
      [],
    );

    return result[0].toBigInt();
  }

  try_withdrawalTimelockPeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "withdrawalTimelockPeriod",
      "withdrawalTimelockPeriod():(uint32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall extends ethereum.Call {
  get inputs(): AcceptOwnershipCall__Inputs {
    return new AcceptOwnershipCall__Inputs(this);
  }

  get outputs(): AcceptOwnershipCall__Outputs {
    return new AcceptOwnershipCall__Outputs(this);
  }
}

export class AcceptOwnershipCall__Inputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall__Outputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class CreateObligationCall extends ethereum.Call {
  get inputs(): CreateObligationCall__Inputs {
    return new CreateObligationCall__Inputs(this);
  }

  get outputs(): CreateObligationCall__Outputs {
    return new CreateObligationCall__Outputs(this);
  }
}

export class CreateObligationCall__Inputs {
  _call: CreateObligationCall;

  constructor(call: CreateObligationCall) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get bApp(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get obligationPercentage(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class CreateObligationCall__Outputs {
  _call: CreateObligationCall;

  constructor(call: CreateObligationCall) {
    this._call = call;
  }
}

export class CreateStrategyCall extends ethereum.Call {
  get inputs(): CreateStrategyCall__Inputs {
    return new CreateStrategyCall__Inputs(this);
  }

  get outputs(): CreateStrategyCall__Outputs {
    return new CreateStrategyCall__Outputs(this);
  }
}

export class CreateStrategyCall__Inputs {
  _call: CreateStrategyCall;

  constructor(call: CreateStrategyCall) {
    this._call = call;
  }

  get fee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get metadataURI(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class CreateStrategyCall__Outputs {
  _call: CreateStrategyCall;

  constructor(call: CreateStrategyCall) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class DelegateBalanceCall extends ethereum.Call {
  get inputs(): DelegateBalanceCall__Inputs {
    return new DelegateBalanceCall__Inputs(this);
  }

  get outputs(): DelegateBalanceCall__Outputs {
    return new DelegateBalanceCall__Outputs(this);
  }
}

export class DelegateBalanceCall__Inputs {
  _call: DelegateBalanceCall;

  constructor(call: DelegateBalanceCall) {
    this._call = call;
  }

  get receiver(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get percentage(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DelegateBalanceCall__Outputs {
  _call: DelegateBalanceCall;

  constructor(call: DelegateBalanceCall) {
    this._call = call;
  }
}

export class DepositERC20Call extends ethereum.Call {
  get inputs(): DepositERC20Call__Inputs {
    return new DepositERC20Call__Inputs(this);
  }

  get outputs(): DepositERC20Call__Outputs {
    return new DepositERC20Call__Outputs(this);
  }
}

export class DepositERC20Call__Inputs {
  _call: DepositERC20Call;

  constructor(call: DepositERC20Call) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class DepositERC20Call__Outputs {
  _call: DepositERC20Call;

  constructor(call: DepositERC20Call) {
    this._call = call;
  }
}

export class DepositETHCall extends ethereum.Call {
  get inputs(): DepositETHCall__Inputs {
    return new DepositETHCall__Inputs(this);
  }

  get outputs(): DepositETHCall__Outputs {
    return new DepositETHCall__Outputs(this);
  }
}

export class DepositETHCall__Inputs {
  _call: DepositETHCall;

  constructor(call: DepositETHCall) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DepositETHCall__Outputs {
  _call: DepositETHCall;

  constructor(call: DepositETHCall) {
    this._call = call;
  }
}

export class FinalizeFeeUpdateCall extends ethereum.Call {
  get inputs(): FinalizeFeeUpdateCall__Inputs {
    return new FinalizeFeeUpdateCall__Inputs(this);
  }

  get outputs(): FinalizeFeeUpdateCall__Outputs {
    return new FinalizeFeeUpdateCall__Outputs(this);
  }
}

export class FinalizeFeeUpdateCall__Inputs {
  _call: FinalizeFeeUpdateCall;

  constructor(call: FinalizeFeeUpdateCall) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class FinalizeFeeUpdateCall__Outputs {
  _call: FinalizeFeeUpdateCall;

  constructor(call: FinalizeFeeUpdateCall) {
    this._call = call;
  }
}

export class FinalizeUpdateObligationCall extends ethereum.Call {
  get inputs(): FinalizeUpdateObligationCall__Inputs {
    return new FinalizeUpdateObligationCall__Inputs(this);
  }

  get outputs(): FinalizeUpdateObligationCall__Outputs {
    return new FinalizeUpdateObligationCall__Outputs(this);
  }
}

export class FinalizeUpdateObligationCall__Inputs {
  _call: FinalizeUpdateObligationCall;

  constructor(call: FinalizeUpdateObligationCall) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get bApp(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class FinalizeUpdateObligationCall__Outputs {
  _call: FinalizeUpdateObligationCall;

  constructor(call: FinalizeUpdateObligationCall) {
    this._call = call;
  }
}

export class FinalizeWithdrawalCall extends ethereum.Call {
  get inputs(): FinalizeWithdrawalCall__Inputs {
    return new FinalizeWithdrawalCall__Inputs(this);
  }

  get outputs(): FinalizeWithdrawalCall__Outputs {
    return new FinalizeWithdrawalCall__Outputs(this);
  }
}

export class FinalizeWithdrawalCall__Inputs {
  _call: FinalizeWithdrawalCall;

  constructor(call: FinalizeWithdrawalCall) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class FinalizeWithdrawalCall__Outputs {
  _call: FinalizeWithdrawalCall;

  constructor(call: FinalizeWithdrawalCall) {
    this._call = call;
  }
}

export class FinalizeWithdrawalETHCall extends ethereum.Call {
  get inputs(): FinalizeWithdrawalETHCall__Inputs {
    return new FinalizeWithdrawalETHCall__Inputs(this);
  }

  get outputs(): FinalizeWithdrawalETHCall__Outputs {
    return new FinalizeWithdrawalETHCall__Outputs(this);
  }
}

export class FinalizeWithdrawalETHCall__Inputs {
  _call: FinalizeWithdrawalETHCall;

  constructor(call: FinalizeWithdrawalETHCall) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class FinalizeWithdrawalETHCall__Outputs {
  _call: FinalizeWithdrawalETHCall;

  constructor(call: FinalizeWithdrawalETHCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get owner_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get ssvBasedAppManger_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get ssvStrategyManager_(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get protocolManager_(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get config(): InitializeCallConfigStruct {
    return changetype<InitializeCallConfigStruct>(
      this._call.inputValues[4].value.toTuple(),
    );
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCallConfigStruct extends ethereum.Tuple {
  get maxShares(): BigInt {
    return this[0].toBigInt();
  }

  get feeTimelockPeriod(): BigInt {
    return this[1].toBigInt();
  }

  get feeExpireTime(): BigInt {
    return this[2].toBigInt();
  }

  get withdrawalTimelockPeriod(): BigInt {
    return this[3].toBigInt();
  }

  get withdrawalExpireTime(): BigInt {
    return this[4].toBigInt();
  }

  get obligationTimelockPeriod(): BigInt {
    return this[5].toBigInt();
  }

  get obligationExpireTime(): BigInt {
    return this[6].toBigInt();
  }

  get tokenUpdateTimelockPeriod(): BigInt {
    return this[7].toBigInt();
  }

  get maxFeeIncrement(): BigInt {
    return this[8].toBigInt();
  }

  get disabledFeatures(): BigInt {
    return this[9].toBigInt();
  }
}

export class OptInToBAppCall extends ethereum.Call {
  get inputs(): OptInToBAppCall__Inputs {
    return new OptInToBAppCall__Inputs(this);
  }

  get outputs(): OptInToBAppCall__Outputs {
    return new OptInToBAppCall__Outputs(this);
  }
}

export class OptInToBAppCall__Inputs {
  _call: OptInToBAppCall;

  constructor(call: OptInToBAppCall) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get bApp(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokens(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }

  get obligationPercentages(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class OptInToBAppCall__Outputs {
  _call: OptInToBAppCall;

  constructor(call: OptInToBAppCall) {
    this._call = call;
  }
}

export class ProposeFeeUpdateCall extends ethereum.Call {
  get inputs(): ProposeFeeUpdateCall__Inputs {
    return new ProposeFeeUpdateCall__Inputs(this);
  }

  get outputs(): ProposeFeeUpdateCall__Outputs {
    return new ProposeFeeUpdateCall__Outputs(this);
  }
}

export class ProposeFeeUpdateCall__Inputs {
  _call: ProposeFeeUpdateCall;

  constructor(call: ProposeFeeUpdateCall) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get proposedFee(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ProposeFeeUpdateCall__Outputs {
  _call: ProposeFeeUpdateCall;

  constructor(call: ProposeFeeUpdateCall) {
    this._call = call;
  }
}

export class ProposeUpdateObligationCall extends ethereum.Call {
  get inputs(): ProposeUpdateObligationCall__Inputs {
    return new ProposeUpdateObligationCall__Inputs(this);
  }

  get outputs(): ProposeUpdateObligationCall__Outputs {
    return new ProposeUpdateObligationCall__Outputs(this);
  }
}

export class ProposeUpdateObligationCall__Inputs {
  _call: ProposeUpdateObligationCall;

  constructor(call: ProposeUpdateObligationCall) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get bApp(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get obligationPercentage(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class ProposeUpdateObligationCall__Outputs {
  _call: ProposeUpdateObligationCall;

  constructor(call: ProposeUpdateObligationCall) {
    this._call = call;
  }
}

export class ProposeWithdrawalCall extends ethereum.Call {
  get inputs(): ProposeWithdrawalCall__Inputs {
    return new ProposeWithdrawalCall__Inputs(this);
  }

  get outputs(): ProposeWithdrawalCall__Outputs {
    return new ProposeWithdrawalCall__Outputs(this);
  }
}

export class ProposeWithdrawalCall__Inputs {
  _call: ProposeWithdrawalCall;

  constructor(call: ProposeWithdrawalCall) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ProposeWithdrawalCall__Outputs {
  _call: ProposeWithdrawalCall;

  constructor(call: ProposeWithdrawalCall) {
    this._call = call;
  }
}

export class ProposeWithdrawalETHCall extends ethereum.Call {
  get inputs(): ProposeWithdrawalETHCall__Inputs {
    return new ProposeWithdrawalETHCall__Inputs(this);
  }

  get outputs(): ProposeWithdrawalETHCall__Outputs {
    return new ProposeWithdrawalETHCall__Outputs(this);
  }
}

export class ProposeWithdrawalETHCall__Inputs {
  _call: ProposeWithdrawalETHCall;

  constructor(call: ProposeWithdrawalETHCall) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ProposeWithdrawalETHCall__Outputs {
  _call: ProposeWithdrawalETHCall;

  constructor(call: ProposeWithdrawalETHCall) {
    this._call = call;
  }
}

export class ReduceFeeCall extends ethereum.Call {
  get inputs(): ReduceFeeCall__Inputs {
    return new ReduceFeeCall__Inputs(this);
  }

  get outputs(): ReduceFeeCall__Outputs {
    return new ReduceFeeCall__Outputs(this);
  }
}

export class ReduceFeeCall__Inputs {
  _call: ReduceFeeCall;

  constructor(call: ReduceFeeCall) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get proposedFee(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ReduceFeeCall__Outputs {
  _call: ReduceFeeCall;

  constructor(call: ReduceFeeCall) {
    this._call = call;
  }
}

export class RegisterBAppCall extends ethereum.Call {
  get inputs(): RegisterBAppCall__Inputs {
    return new RegisterBAppCall__Inputs(this);
  }

  get outputs(): RegisterBAppCall__Outputs {
    return new RegisterBAppCall__Outputs(this);
  }
}

export class RegisterBAppCall__Inputs {
  _call: RegisterBAppCall;

  constructor(call: RegisterBAppCall) {
    this._call = call;
  }

  get tokens(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get sharedRiskLevels(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get metadataURI(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class RegisterBAppCall__Outputs {
  _call: RegisterBAppCall;

  constructor(call: RegisterBAppCall) {
    this._call = call;
  }
}

export class RemoveDelegatedBalanceCall extends ethereum.Call {
  get inputs(): RemoveDelegatedBalanceCall__Inputs {
    return new RemoveDelegatedBalanceCall__Inputs(this);
  }

  get outputs(): RemoveDelegatedBalanceCall__Outputs {
    return new RemoveDelegatedBalanceCall__Outputs(this);
  }
}

export class RemoveDelegatedBalanceCall__Inputs {
  _call: RemoveDelegatedBalanceCall;

  constructor(call: RemoveDelegatedBalanceCall) {
    this._call = call;
  }

  get receiver(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveDelegatedBalanceCall__Outputs {
  _call: RemoveDelegatedBalanceCall;

  constructor(call: RemoveDelegatedBalanceCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SlashCall extends ethereum.Call {
  get inputs(): SlashCall__Inputs {
    return new SlashCall__Inputs(this);
  }

  get outputs(): SlashCall__Outputs {
    return new SlashCall__Outputs(this);
  }
}

export class SlashCall__Inputs {
  _call: SlashCall;

  constructor(call: SlashCall) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get bApp(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get percentage(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class SlashCall__Outputs {
  _call: SlashCall;

  constructor(call: SlashCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateAccountMetadataURICall extends ethereum.Call {
  get inputs(): UpdateAccountMetadataURICall__Inputs {
    return new UpdateAccountMetadataURICall__Inputs(this);
  }

  get outputs(): UpdateAccountMetadataURICall__Outputs {
    return new UpdateAccountMetadataURICall__Outputs(this);
  }
}

export class UpdateAccountMetadataURICall__Inputs {
  _call: UpdateAccountMetadataURICall;

  constructor(call: UpdateAccountMetadataURICall) {
    this._call = call;
  }

  get metadataURI(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class UpdateAccountMetadataURICall__Outputs {
  _call: UpdateAccountMetadataURICall;

  constructor(call: UpdateAccountMetadataURICall) {
    this._call = call;
  }
}

export class UpdateBAppMetadataURICall extends ethereum.Call {
  get inputs(): UpdateBAppMetadataURICall__Inputs {
    return new UpdateBAppMetadataURICall__Inputs(this);
  }

  get outputs(): UpdateBAppMetadataURICall__Outputs {
    return new UpdateBAppMetadataURICall__Outputs(this);
  }
}

export class UpdateBAppMetadataURICall__Inputs {
  _call: UpdateBAppMetadataURICall;

  constructor(call: UpdateBAppMetadataURICall) {
    this._call = call;
  }

  get metadataURI(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class UpdateBAppMetadataURICall__Outputs {
  _call: UpdateBAppMetadataURICall;

  constructor(call: UpdateBAppMetadataURICall) {
    this._call = call;
  }
}

export class UpdateBAppsTokensCall extends ethereum.Call {
  get inputs(): UpdateBAppsTokensCall__Inputs {
    return new UpdateBAppsTokensCall__Inputs(this);
  }

  get outputs(): UpdateBAppsTokensCall__Outputs {
    return new UpdateBAppsTokensCall__Outputs(this);
  }
}

export class UpdateBAppsTokensCall__Inputs {
  _call: UpdateBAppsTokensCall;

  constructor(call: UpdateBAppsTokensCall) {
    this._call = call;
  }

  get tokenConfigs(): Array<UpdateBAppsTokensCallTokenConfigsStruct> {
    return this._call.inputValues[0].value.toTupleArray<UpdateBAppsTokensCallTokenConfigsStruct>();
  }
}

export class UpdateBAppsTokensCall__Outputs {
  _call: UpdateBAppsTokensCall;

  constructor(call: UpdateBAppsTokensCall) {
    this._call = call;
  }
}

export class UpdateBAppsTokensCallTokenConfigsStruct extends ethereum.Tuple {
  get token(): Address {
    return this[0].toAddress();
  }

  get sharedRiskLevel(): BigInt {
    return this[1].toBigInt();
  }
}

export class UpdateDelegatedBalanceCall extends ethereum.Call {
  get inputs(): UpdateDelegatedBalanceCall__Inputs {
    return new UpdateDelegatedBalanceCall__Inputs(this);
  }

  get outputs(): UpdateDelegatedBalanceCall__Outputs {
    return new UpdateDelegatedBalanceCall__Outputs(this);
  }
}

export class UpdateDelegatedBalanceCall__Inputs {
  _call: UpdateDelegatedBalanceCall;

  constructor(call: UpdateDelegatedBalanceCall) {
    this._call = call;
  }

  get receiver(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get percentage(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateDelegatedBalanceCall__Outputs {
  _call: UpdateDelegatedBalanceCall;

  constructor(call: UpdateDelegatedBalanceCall) {
    this._call = call;
  }
}

export class UpdateDisabledFeaturesCall extends ethereum.Call {
  get inputs(): UpdateDisabledFeaturesCall__Inputs {
    return new UpdateDisabledFeaturesCall__Inputs(this);
  }

  get outputs(): UpdateDisabledFeaturesCall__Outputs {
    return new UpdateDisabledFeaturesCall__Outputs(this);
  }
}

export class UpdateDisabledFeaturesCall__Inputs {
  _call: UpdateDisabledFeaturesCall;

  constructor(call: UpdateDisabledFeaturesCall) {
    this._call = call;
  }

  get disabledFeatures(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateDisabledFeaturesCall__Outputs {
  _call: UpdateDisabledFeaturesCall;

  constructor(call: UpdateDisabledFeaturesCall) {
    this._call = call;
  }
}

export class UpdateFeeExpireTimeCall extends ethereum.Call {
  get inputs(): UpdateFeeExpireTimeCall__Inputs {
    return new UpdateFeeExpireTimeCall__Inputs(this);
  }

  get outputs(): UpdateFeeExpireTimeCall__Outputs {
    return new UpdateFeeExpireTimeCall__Outputs(this);
  }
}

export class UpdateFeeExpireTimeCall__Inputs {
  _call: UpdateFeeExpireTimeCall;

  constructor(call: UpdateFeeExpireTimeCall) {
    this._call = call;
  }

  get value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateFeeExpireTimeCall__Outputs {
  _call: UpdateFeeExpireTimeCall;

  constructor(call: UpdateFeeExpireTimeCall) {
    this._call = call;
  }
}

export class UpdateFeeTimelockPeriodCall extends ethereum.Call {
  get inputs(): UpdateFeeTimelockPeriodCall__Inputs {
    return new UpdateFeeTimelockPeriodCall__Inputs(this);
  }

  get outputs(): UpdateFeeTimelockPeriodCall__Outputs {
    return new UpdateFeeTimelockPeriodCall__Outputs(this);
  }
}

export class UpdateFeeTimelockPeriodCall__Inputs {
  _call: UpdateFeeTimelockPeriodCall;

  constructor(call: UpdateFeeTimelockPeriodCall) {
    this._call = call;
  }

  get value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateFeeTimelockPeriodCall__Outputs {
  _call: UpdateFeeTimelockPeriodCall;

  constructor(call: UpdateFeeTimelockPeriodCall) {
    this._call = call;
  }
}

export class UpdateMaxFeeIncrementCall extends ethereum.Call {
  get inputs(): UpdateMaxFeeIncrementCall__Inputs {
    return new UpdateMaxFeeIncrementCall__Inputs(this);
  }

  get outputs(): UpdateMaxFeeIncrementCall__Outputs {
    return new UpdateMaxFeeIncrementCall__Outputs(this);
  }
}

export class UpdateMaxFeeIncrementCall__Inputs {
  _call: UpdateMaxFeeIncrementCall;

  constructor(call: UpdateMaxFeeIncrementCall) {
    this._call = call;
  }

  get value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateMaxFeeIncrementCall__Outputs {
  _call: UpdateMaxFeeIncrementCall;

  constructor(call: UpdateMaxFeeIncrementCall) {
    this._call = call;
  }
}

export class UpdateMaxSharesCall extends ethereum.Call {
  get inputs(): UpdateMaxSharesCall__Inputs {
    return new UpdateMaxSharesCall__Inputs(this);
  }

  get outputs(): UpdateMaxSharesCall__Outputs {
    return new UpdateMaxSharesCall__Outputs(this);
  }
}

export class UpdateMaxSharesCall__Inputs {
  _call: UpdateMaxSharesCall;

  constructor(call: UpdateMaxSharesCall) {
    this._call = call;
  }

  get value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateMaxSharesCall__Outputs {
  _call: UpdateMaxSharesCall;

  constructor(call: UpdateMaxSharesCall) {
    this._call = call;
  }
}

export class UpdateModuleCall extends ethereum.Call {
  get inputs(): UpdateModuleCall__Inputs {
    return new UpdateModuleCall__Inputs(this);
  }

  get outputs(): UpdateModuleCall__Outputs {
    return new UpdateModuleCall__Outputs(this);
  }
}

export class UpdateModuleCall__Inputs {
  _call: UpdateModuleCall;

  constructor(call: UpdateModuleCall) {
    this._call = call;
  }

  get moduleIds(): Array<i32> {
    return this._call.inputValues[0].value.toI32Array();
  }

  get moduleAddresses(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class UpdateModuleCall__Outputs {
  _call: UpdateModuleCall;

  constructor(call: UpdateModuleCall) {
    this._call = call;
  }
}

export class UpdateObligationExpireTimeCall extends ethereum.Call {
  get inputs(): UpdateObligationExpireTimeCall__Inputs {
    return new UpdateObligationExpireTimeCall__Inputs(this);
  }

  get outputs(): UpdateObligationExpireTimeCall__Outputs {
    return new UpdateObligationExpireTimeCall__Outputs(this);
  }
}

export class UpdateObligationExpireTimeCall__Inputs {
  _call: UpdateObligationExpireTimeCall;

  constructor(call: UpdateObligationExpireTimeCall) {
    this._call = call;
  }

  get value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateObligationExpireTimeCall__Outputs {
  _call: UpdateObligationExpireTimeCall;

  constructor(call: UpdateObligationExpireTimeCall) {
    this._call = call;
  }
}

export class UpdateObligationTimelockPeriodCall extends ethereum.Call {
  get inputs(): UpdateObligationTimelockPeriodCall__Inputs {
    return new UpdateObligationTimelockPeriodCall__Inputs(this);
  }

  get outputs(): UpdateObligationTimelockPeriodCall__Outputs {
    return new UpdateObligationTimelockPeriodCall__Outputs(this);
  }
}

export class UpdateObligationTimelockPeriodCall__Inputs {
  _call: UpdateObligationTimelockPeriodCall;

  constructor(call: UpdateObligationTimelockPeriodCall) {
    this._call = call;
  }

  get value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateObligationTimelockPeriodCall__Outputs {
  _call: UpdateObligationTimelockPeriodCall;

  constructor(call: UpdateObligationTimelockPeriodCall) {
    this._call = call;
  }
}

export class UpdateStrategyMetadataURICall extends ethereum.Call {
  get inputs(): UpdateStrategyMetadataURICall__Inputs {
    return new UpdateStrategyMetadataURICall__Inputs(this);
  }

  get outputs(): UpdateStrategyMetadataURICall__Outputs {
    return new UpdateStrategyMetadataURICall__Outputs(this);
  }
}

export class UpdateStrategyMetadataURICall__Inputs {
  _call: UpdateStrategyMetadataURICall;

  constructor(call: UpdateStrategyMetadataURICall) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get metadataURI(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateStrategyMetadataURICall__Outputs {
  _call: UpdateStrategyMetadataURICall;

  constructor(call: UpdateStrategyMetadataURICall) {
    this._call = call;
  }
}

export class UpdateTokenUpdateTimelockPeriodCall extends ethereum.Call {
  get inputs(): UpdateTokenUpdateTimelockPeriodCall__Inputs {
    return new UpdateTokenUpdateTimelockPeriodCall__Inputs(this);
  }

  get outputs(): UpdateTokenUpdateTimelockPeriodCall__Outputs {
    return new UpdateTokenUpdateTimelockPeriodCall__Outputs(this);
  }
}

export class UpdateTokenUpdateTimelockPeriodCall__Inputs {
  _call: UpdateTokenUpdateTimelockPeriodCall;

  constructor(call: UpdateTokenUpdateTimelockPeriodCall) {
    this._call = call;
  }

  get value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateTokenUpdateTimelockPeriodCall__Outputs {
  _call: UpdateTokenUpdateTimelockPeriodCall;

  constructor(call: UpdateTokenUpdateTimelockPeriodCall) {
    this._call = call;
  }
}

export class UpdateWithdrawalExpireTimeCall extends ethereum.Call {
  get inputs(): UpdateWithdrawalExpireTimeCall__Inputs {
    return new UpdateWithdrawalExpireTimeCall__Inputs(this);
  }

  get outputs(): UpdateWithdrawalExpireTimeCall__Outputs {
    return new UpdateWithdrawalExpireTimeCall__Outputs(this);
  }
}

export class UpdateWithdrawalExpireTimeCall__Inputs {
  _call: UpdateWithdrawalExpireTimeCall;

  constructor(call: UpdateWithdrawalExpireTimeCall) {
    this._call = call;
  }

  get value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateWithdrawalExpireTimeCall__Outputs {
  _call: UpdateWithdrawalExpireTimeCall;

  constructor(call: UpdateWithdrawalExpireTimeCall) {
    this._call = call;
  }
}

export class UpdateWithdrawalTimelockPeriodCall extends ethereum.Call {
  get inputs(): UpdateWithdrawalTimelockPeriodCall__Inputs {
    return new UpdateWithdrawalTimelockPeriodCall__Inputs(this);
  }

  get outputs(): UpdateWithdrawalTimelockPeriodCall__Outputs {
    return new UpdateWithdrawalTimelockPeriodCall__Outputs(this);
  }
}

export class UpdateWithdrawalTimelockPeriodCall__Inputs {
  _call: UpdateWithdrawalTimelockPeriodCall;

  constructor(call: UpdateWithdrawalTimelockPeriodCall) {
    this._call = call;
  }

  get value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateWithdrawalTimelockPeriodCall__Outputs {
  _call: UpdateWithdrawalTimelockPeriodCall;

  constructor(call: UpdateWithdrawalTimelockPeriodCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}

export class WithdrawETHSlashingFundCall extends ethereum.Call {
  get inputs(): WithdrawETHSlashingFundCall__Inputs {
    return new WithdrawETHSlashingFundCall__Inputs(this);
  }

  get outputs(): WithdrawETHSlashingFundCall__Outputs {
    return new WithdrawETHSlashingFundCall__Outputs(this);
  }
}

export class WithdrawETHSlashingFundCall__Inputs {
  _call: WithdrawETHSlashingFundCall;

  constructor(call: WithdrawETHSlashingFundCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawETHSlashingFundCall__Outputs {
  _call: WithdrawETHSlashingFundCall;

  constructor(call: WithdrawETHSlashingFundCall) {
    this._call = call;
  }
}

export class WithdrawSlashingFundCall extends ethereum.Call {
  get inputs(): WithdrawSlashingFundCall__Inputs {
    return new WithdrawSlashingFundCall__Inputs(this);
  }

  get outputs(): WithdrawSlashingFundCall__Outputs {
    return new WithdrawSlashingFundCall__Outputs(this);
  }
}

export class WithdrawSlashingFundCall__Inputs {
  _call: WithdrawSlashingFundCall;

  constructor(call: WithdrawSlashingFundCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawSlashingFundCall__Outputs {
  _call: WithdrawSlashingFundCall;

  constructor(call: WithdrawSlashingFundCall) {
    this._call = call;
  }
}
